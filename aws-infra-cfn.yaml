AWSTemplateFormatVersion: 2010-09-09
Description: AWS CustomizedVPC+AmazonLinux2*3 Ansible Infra
Parameters:
  EnvironmentSize:
    Type: String
    Default: SMALL
    AllowedValues:
      - SMALL
      - MEDIUM
      - LARGE
    Description: Select Environment Size (S,M,L)
Mappings:
  RegionMap:
    us-east-1:
      "AMALINUX" : "ami-afd15ed0" # AMALINUX 2 MAY 2018 

  InstanceSize:
    SMALL:
      "EC2" : "t2.micro"
      "DB" : "db.t2.micro"
    MEDIUM:
      "EC2" : "t2.small"
      "DB" : "db.t2.small"
    LARGE:
      "EC2" : "t2.medium"
      "DB" : "db.t2.medium"
Resources:
  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      Tags: 
        - 
          Key: Name
          Value: !Sub
            - "${StackName}-demo"
            - StackName: !Ref AWS::StackName
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      Tags: 
        - 
          Key: Name
          Value: !Sub
            - "${StackName}-demo"
            - StackName: !Ref AWS::StackName
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock: 10.0.0.0/16
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags: 
        - 
          Key: Name
          Value: !Sub
            - "${StackName}-demo"
            - StackName: !Ref AWS::StackName
  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      Tags: 
        - 
          Key: Name
          Value: !Sub
            - "${StackName}-demo"
            - StackName: !Ref AWS::StackName
      VpcId: !Ref VPC
  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable
  PublicSubnetNetworkAclAssociation:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      NetworkAclId: !GetAtt 
        - VPC
        - DefaultNetworkAcl
  Ec2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: EC2 Security Group
      VpcId: !Ref VPC
  ingress3:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref Ec2SecurityGroup
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: 0.0.0.0/0
  Ec2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      Tags: 
        - 
          Key: Name
          Value: !Sub
            - "${StackName}-demo"
            - StackName: !Ref AWS::StackName
      KeyName: Joseph-ACG-Demo
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMALINUX] #/ Amazon Linux
      InstanceType: !FindInMap [InstanceSize, !Ref EnvironmentSize, EC2]
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - Ref: "Ec2SecurityGroup"
          SubnetId: !Ref PublicSubnet
